name: Build release packages

on:
  release:
    types: ["published"]

jobs:
  Windows:
    name: ${{ matrix.config.display_name }}
    if: ${{ github.repository == 'Russian-Doom/russian-doom' }}
    runs-on: ${{ matrix.config.runner }}
    strategy:
      fail-fast: true
      matrix:
        config:
          -
            display_name: "Windows | x86"
            runner: "windows-2025"
            cmake_preset: 'ci-windows-86-release'
            build_suffix: "x86"
            msvc_triplet_path: 'cmake/triplets/x86-windows.cmake'
          -
            display_name: "Windows | x64"
            runner: "windows-2025"
            cmake_preset: 'ci-windows-64-release'
            build_suffix: "x64"
            msvc_triplet_path: 'cmake/triplets/x64-windows.cmake'
          -
            display_name: "Windows | AArch64"
            runner: "windows-11-arm"
            cmake_preset: 'ci-windows-arm64-release'
            build_suffix: "aarch64"
            # msvc_triplet_path: '${{ VCPKG_INSTALLATION_ROOT }}/triplets/arm64-windows.cmake'
            msvc_triplet_path: 'C:/vcpkg/triplets/arm64-windows.cmake'

    permissions:
      contents: write
    defaults:
      run:
        shell: bash
    env:
      VCPKG_BINARY_SOURCES: "clear;files,${{ github.workspace }}/vcpkg_cache,readwrite"
    steps:
      - name: Restore MSVC cache
        if: matrix.config.build_suffix == 'x86'
        uses: actions/cache/restore@v4
        with:
          path: ${{ github.workspace }}/choco_cache
          key: vs-${{ matrix.config.build_suffix }}

      - name: Install MSVC 2019
        if: matrix.config.build_suffix == 'x86'
        run: |
          choco config set cacheLocation "${{ github.workspace }}/choco_cache"
          choco install visualstudio2019buildtools --package-parameters " \
            --add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 \
            --add Microsoft.VisualStudio.Component.WinXP \
            --add Microsoft.VisualStudio.Component.VC.v141.x86.x64"

      - name: Bootstrap VCPKG
        run: |
          cd $VCPKG_INSTALLATION_ROOT
          echo "vcpkg revision: $(git rev-parse HEAD)"
          ./bootstrap-vcpkg.sh -disableMetrics

      - uses: actions/checkout@v4

      - name: Restore VCPKG dependencies cache
        uses: actions/cache/restore@v4
        with:
          path: ${{ github.workspace }}/vcpkg_cache
          key: vcpkg-${{ matrix.config.build_suffix }}-${{ hashFiles('vcpkg.json', matrix.config.msvc_triplet_path) }}
          restore-keys: vcpkg-${{ matrix.config.build_suffix }}-

      - name: Configure & Build & Package
        env:
          CC: cl
        run: cmake --workflow --preset "${{ matrix.config.cmake_preset }}"

      - name: Upload Zip
        shell: bash
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: gh release upload ${{ github.event.release.tag_name }} ./build/*.zip ./build/*.zip.sha256

  Linux:
    name: Linux | ${{ matrix.distro.display_name }} | ${{ matrix.platform.arch }}
    if: ${{ github.repository == 'Russian-Doom/russian-doom' }}
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: true
      matrix:
        distro:
          -
            display_name: Debian
            distro: debian
            package: deb
            dockerfile: '.devcontainer/Debian.dockerfile'
            preset_suffix: deb
          -
            display_name: Fedora
            distro: fedora
            package: rpm
            dockerfile: '.devcontainer/Fedora.dockerfile'
            preset_suffix: fedora-rpm
        platform:
          -
            runner: 'ubuntu-24.04'
            arch: "x64"
          -
            runner: 'ubuntu-24.04-arm'
            arch: "arm64"

    permissions:
      contents: write
    defaults:
      run:
        shell: bash
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver: docker

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Restore Docker images
        uses: AndreKurait/docker-cache@0.6.0
        with:
          read-only: true
          key: docker-${{ matrix.platform.arch }}-${{ hashFiles(matrix.distro.dockerfile) }}-

      - name: Toolchain & Configure & Build & Package
        run: |
          chmod 777 .
          ./crosscompile_linux_packages.sh "ci-linux-release-${{ matrix.distro.preset_suffix }}" ${{ matrix.distro.distro }}

      - name: Upload packages
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: >-
          gh release upload ${{ github.event.release.tag_name }}
            ./build/*.${{ matrix.distro.package }}
            ./build/*.${{ matrix.distro.package }}.sha256
