name: Build release packages

on:
  release:
    types: ["published"]

jobs:
  Release:
    name: ${{ matrix.config.display_name }}
    if: ${{ github.repository == 'Russian-Doom/russian-doom' }}
    runs-on: ${{ matrix.config.runner }}
    strategy:
      fail-fast: true
      matrix:
        config:
          # TODO: Add MSVC x86 Windows build
          -
            display_name: "Windows | x64"
            runner: "windows-2025"
            shell: "msys2 {0}"
            msys_msystem: "UCRT64"
            msys_prefix: "ucrt-x86_64"
            compiler_name: "gcc"
            cmake_preset: 'ci-msys2-release'
            build_suffix: "x64"

    permissions:
      contents: write
    defaults:
      run:
        shell: ${{ matrix.config.shell }}
    steps:
      - name: Setup MSYS env
        if: runner.os == 'Windows'
        timeout-minutes: 10
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.config.msys_msystem }}
          update: true
          install: >-
            mingw-w64-${{ matrix.config.msys_prefix }}-pkgconf
            mingw-w64-${{ matrix.config.msys_prefix }}-${{ matrix.config.compiler_name }}
            mingw-w64-${{ matrix.config.msys_prefix }}-ninja
            mingw-w64-${{ matrix.config.msys_prefix }}-cmake
            mingw-w64-${{ matrix.config.msys_prefix }}-SDL2
            mingw-w64-${{ matrix.config.msys_prefix }}-SDL2_net
            mingw-w64-${{ matrix.config.msys_prefix }}-SDL2_mixer
            mingw-w64-${{ matrix.config.msys_prefix }}-libsamplerate

      - uses: actions/checkout@v4

      - name: Configure & Build & Package
        run: |
          export MAKEFLAGS=--keep-going
          cmake --workflow --preset "${{ matrix.config.cmake_preset }}"

      - name: Upload Zip
        if: runner.os == 'Windows'
        shell: bash
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          gh release upload ${{ github.event.release.tag_name }} ./build/russian-doom-${{ github.ref_name }}-windows-${{ matrix.config.build_suffix }}.zip
          gh release upload ${{ github.event.release.tag_name }} ./build/russian-doom-${{ github.ref_name }}-windows-${{ matrix.config.build_suffix }}.zip.sha256
